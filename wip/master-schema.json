{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Intent Trader Canonical Schema",
  "description": "A unified schema for all trading objects in the Intent Trader system",
  "version": "0.5.2",
  "author": "Simon Plant",
  "created": "2025-05-20",
  "updated": "2025-05-20",
  
  "definitions": {
    "baseObject": {
      "type": "object",
      "required": ["schemaVersion", "id", "source", "timestamp"],
      "properties": {
        "schemaVersion": {
          "type": "string",
          "description": "The version of the schema used by this object",
          "default": "0.5.2"
        },
        "id": {
          "type": "string",
          "description": "Globally unique identifier for this object",
          "pattern": "^[a-zA-Z0-9-_]+$"
        },
        "source": {
          "type": "string",
          "description": "The source that created this object",
          "enum": ["manual", "dp", "mancini", "vtf", "moderator", "system", "claude"]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The ISO timestamp when this object was created"
        },
        "origin": {
          "type": "object",
          "description": "Lineage information for object traceability",
          "properties": {
            "planId": { 
              "type": "string",
              "description": "ID of originating trade plan"
            },
            "ideaId": { 
              "type": "string",
              "description": "ID of originating trade idea" 
            },
            "createdBy": { 
              "type": "string",
              "description": "Command that created this object" 
            },
            "sourceCommand": { 
              "type": "string",
              "description": "Full command text that created this object" 
            }
          }
        },
        "aiTrace": {
          "type": "object",
          "description": "AI processing metadata for prompt tracing",
          "properties": {
            "promptId": { 
              "type": "string",
              "description": "ID of prompt that generated this object" 
            },
            "version": { 
              "type": "string",
              "description": "Prompt version used" 
            },
            "parsedFrom": { 
              "type": "string",
              "description": "Original source material ID/reference" 
            }
          }
        }
      }
    },
    
    "price": {
      "type": "number",
      "description": "A price value",
      "minimum": 0
    },
    
    "priceLevel": {
      "type": "object",
      "required": ["price"],
      "properties": {
        "price": { "$ref": "#/definitions/price" },
        "notes": { "type": "string" },
        "type": {
          "type": "string",
          "enum": ["major", "minor", "psychological", "key", "vwap", "pivot"],
          "enumDescriptions": {
            "major": "Primary support/resistance level with high significance",
            "minor": "Secondary support/resistance level with moderate impact",
            "psychological": "Round-number level with market psychology impact",
            "key": "Critical decision point level",
            "vwap": "Volume-weighted average price level",
            "pivot": "Mathematical pivot point"
          }
        },
        "strength": {
          "type": "string",
          "enum": ["strong", "moderate", "weak"],
          "enumDescriptions": {
            "strong": "Well-tested level with high probability of respect",
            "moderate": "Moderately reliable level",
            "weak": "Untested or weakly respected level"
          }
        }
      }
    },
    
    "priceZone": {
      "type": "object",
      "required": ["min", "max"],
      "properties": {
        "min": { "$ref": "#/definitions/price" },
        "max": { "$ref": "#/definitions/price" },
        "notes": { "type": "string" },
        "type": {
          "type": "string",
          "enum": ["entry", "profit", "stop", "decision", "consolidation"],
          "enumDescriptions": {
            "entry": "Zone for trade entry",
            "profit": "Target zone for taking profits",
            "stop": "Area for stop placement",
            "decision": "Key decision zone that determines market direction",
            "consolidation": "Price consolidation area"
          }
        }
      }
    },
    
    "conviction": {
      "type": "object",
      "required": ["level"],
      "properties": {
        "level": {
          "type": "string",
          "enum": ["focus-trade", "high", "medium", "low", "negative"],
          "enumDescriptions": {
            "focus-trade": "Highest conviction level, primary focus trade",
            "high": "Strong conviction in the trade idea",
            "medium": "Moderate conviction, viable opportunity",
            "low": "Low conviction, watchlist candidate",
            "negative": "Negative view, avoid or consider opposite direction"
          }
        },
        "phrases": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Key phrases that indicate conviction level"
        },
        "score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Numerical confidence score (0-1)"
        }
      }
    },
    
    "riskParameters": {
      "type": "object",
      "properties": {
        "percent": {
          "type": "number",
          "description": "Risk percentage of account",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "type": "number",
          "description": "Risk amount in dollars",
          "minimum": 0
        },
        "plannedRMultiple": {
          "type": "number",
          "description": "Planned risk/reward ratio",
          "minimum": 0
        },
        "realizedRMultiple": {
          "type": "number",
          "description": "Actual realized risk/reward ratio",
          "minimum": 0
        }
      }
    },
    
    "entryParameters": {
      "type": "object",
      "properties": {
        "zone": { "$ref": "#/definitions/priceZone" },
        "condition": {
          "type": "string",
          "description": "Condition that must be met for entry"
        },
        "strategy": {
          "type": "string",
          "description": "Entry execution strategy",
          "enum": ["market", "limit", "scaled", "test-position", "all-in"],
          "enumDescriptions": {
            "market": "Enter at market price",
            "limit": "Use limit order at specific price",
            "scaled": "Scale into position in multiple parts",
            "test-position": "Enter with small test position first",
            "all-in": "Enter full position at once"
          }
        },
        "tieredEntryAllowed": {
          "type": "boolean",
          "description": "Whether position can be entered in multiple tiers",
          "default": false
        }
      }
    },
    
    "exitParameters": {
      "type": "object",
      "properties": {
        "stopLoss": { "$ref": "#/definitions/price" },
        "target": { "$ref": "#/definitions/price" },
        "strategy": {
          "type": "string",
          "description": "Exit strategy description"
        },
        "trimLevels": {
          "type": "array",
          "items": { "$ref": "#/definitions/trimLevel" },
          "description": "Levels for partial profit taking"
        }
      }
    },
    
    "trimLevel": {
      "type": "object",
      "required": ["price", "percentage"],
      "properties": {
        "price": { 
          "$ref": "#/definitions/price",
          "description": "Price level for the trim"
        },
        "percentage": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Percentage of position to trim"
        },
        "executed": {
          "type": "boolean",
          "default": false,
          "description": "Whether this trim has been executed"
        },
        "executionTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When this trim was executed"
        }
      }
    },
    
    "tradeDuration": {
      "type": "string",
      "enum": ["cashflow", "day", "swing", "position", "long-term"],
      "enumDescriptions": {
        "cashflow": "Intraday scalp (minutes to hours)",
        "day": "Single day trade (close by end of session)",
        "swing": "Multi-day position (days to weeks)",
        "position": "Intermediate hold (weeks to months)",
        "long-term": "Extended hold (months+)"
      }
    },

    "classifications": {
      "type": "object",
      "properties": {
        "isBreakout": {
          "type": "boolean",
          "default": false,
          "description": "Price breaking above resistance"
        },
        "isReversal": {
          "type": "boolean",
          "default": false,
          "description": "Change in trend direction"
        },
        "isFlagPattern": {
          "type": "boolean",
          "default": false,
          "description": "Bullish or bearish flag pattern"
        },
        "isFailedBreakdown": {
          "type": "boolean",
          "default": false,
          "description": "Failed breakdown below support with reclaim"
        },
        "isEarningsPlay": {
          "type": "boolean",
          "default": false,
          "description": "Trade based on earnings announcement"
        },
        "isDayAfterTrade": {
          "type": "boolean",
          "default": false,
          "description": "Day after major event or earnings"
        },
        "isTrendFollow": {
          "type": "boolean",
          "default": false,
          "description": "Trading in direction of established trend"
        },
        "isRangePlay": {
          "type": "boolean",
          "default": false,
          "description": "Trading within a defined range"
        },
        "isGapFill": {
          "type": "boolean",
          "default": false,
          "description": "Trade targeting gap fill"
        },
        "isMomentumPlay": {
          "type": "boolean",
          "default": false,
          "description": "Trading based on price momentum"
        }
      }
    },
    
    "tradedInstrument": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["stock", "option", "future", "etf", "crypto"],
          "description": "Type of financial instrument"
        },
        "underlying": {
          "type": "string",
          "description": "Underlying symbol (for derivatives)"
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "description": "Expiration date (for derivatives)"
        },
        "strike": {
          "type": "number",
          "description": "Strike price (for options)"
        },
        "optionType": {
          "type": "string",
          "enum": ["call", "put"],
          "description": "Option type"
        },
        "contractSize": {
          "type": "number",
          "description": "Contract multiplier"
        }
      }
    },
    
    "schemaMetadata": {
      "type": "object",
      "properties": {
        "authoringVersion": { 
          "type": "string",
          "description": "Version of authoring schema" 
        },
        "runtimeCompatible": { 
          "type": "boolean",
          "description": "Whether this is compatible with runtime schema"
        },
        "generatedDate": { 
          "type": "string", 
          "format": "date-time",
          "description": "When this schema was generated"
        }
      }
    }
  },
  
  "type": "object",
  "oneOf": [
    { "$ref": "#/tradePosition" },
    { "$ref": "#/tradeIdea" },
    { "$ref": "#/tradePlan" },
    { "$ref": "#/tradeLog" },
    { "$ref": "#/sessionLog" },
    { "$ref": "#/conversationContext" }
  ],
  
  "tradePosition": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "required": ["symbol", "direction", "entry", "status"],
    "properties": {
      "symbol": {
        "type": "string",
        "description": "The ticker symbol for this position"
      },
      "direction": {
        "type": "string",
        "enum": ["long", "short"],
        "description": "Position direction"
      },
      "entry": {
        "type": "object",
        "required": ["price", "date"],
        "properties": {
          "price": { 
            "$ref": "#/definitions/price",
            "description": "Entry price"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Entry date"
          },
          "shares": {
            "type": "number",
            "minimum": 0,
            "description": "Number of shares"
          },
          "contracts": {
            "type": "number",
            "minimum": 0,
            "description": "Number of contracts (for options/futures)"
          },
          "notes": {
            "type": "string",
            "description": "Notes about entry"
          }
        }
      },
      "executionTimestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Exact time when the order was executed"
      },
      "fillStatus": {
        "type": "string",
        "enum": ["pending", "partial", "filled", "cancelled", "rejected"],
        "description": "Current fill status of the order",
        "enumDescriptions": {
          "pending": "Order submitted but not filled",
          "partial": "Order partially filled",
          "filled": "Order completely filled",
          "cancelled": "Order cancelled before complete fill",
          "rejected": "Order rejected by broker"
        }
      },
      "entryAttempts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When the attempt was made"
            },
            "price": {
              "$ref": "#/definitions/price",
              "description": "Attempted entry price"
            },
            "result": {
              "type": "string",
              "enum": ["success", "failed", "partial", "cancelled"],
              "description": "Result of the entry attempt"
            },
            "notes": {
              "type": "string",
              "description": "Notes about the entry attempt"
            }
          }
        },
        "description": "History of entry attempts"
      },
      "stop": { 
        "$ref": "#/definitions/price",
        "description": "Current stop loss level"
      },
      "initialStop": { 
        "$ref": "#/definitions/price",
        "description": "Original stop loss level"
      },
      "target": { 
        "$ref": "#/definitions/price",
        "description": "Price target"
      },
      "tradedInstrument": {
        "$ref": "#/definitions/tradedInstrument",
        "description": "Details about the traded instrument"
      },
      "trimLevels": {
        "type": "array",
        "items": { "$ref": "#/definitions/trimLevel" },
        "description": "Levels for partial profit taking"
      },
      "risk": { 
        "$ref": "#/definitions/riskParameters",
        "description": "Risk parameters"
      },
      "status": {
        "type": "string",
        "enum": ["pending", "open", "closed", "cancelled", "partial"],
        "description": "Current position status"
      },
      "setup": {
        "type": "string",
        "description": "The trade setup type"
      },
      "exitDate": {
        "type": "string",
        "format": "date",
        "description": "Date position was closed"
      },
      "exitPrice": { 
        "$ref": "#/definitions/price",
        "description": "Exit price"
      },
      "profit": {
        "type": "object",
        "properties": {
          "amount": { 
            "type": "number",
            "description": "Profit/loss amount in dollars" 
          },
          "percent": { 
            "type": "number",
            "description": "Profit/loss percentage" 
          },
          "rMultiple": { 
            "type": "number",
            "description": "Profit/loss as R multiple" 
          }
        },
        "description": "Position profit/loss data"
      },
      "notes": {
        "type": "string",
        "description": "Additional notes about this position"
      },
      "conviction": { 
        "$ref": "#/definitions/conviction",
        "description": "Trade conviction level"
      },
      "isRunner": {
        "type": "boolean",
        "default": false,
        "description": "Whether this is a runner portion of a position"
      },
      "isCorePosition": {
        "type": "boolean",
        "default": false,
        "description": "Whether this is a core position for building around"
      },
      "classifications": { 
        "$ref": "#/definitions/classifications",
        "description": "Trade setup classifications"
      }
    }
  },
  
  "tradeIdea": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "required": ["symbol", "direction"],
    "properties": {
      "symbol": {
        "type": "string",
        "description": "The ticker symbol for this idea"
      },
      "direction": {
        "type": "string",
        "enum": ["long", "short"],
        "description": "Trade direction"
      },
      "conviction": { 
        "$ref": "#/definitions/conviction",
        "description": "Conviction level"
      },
      "confidenceScore": {
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "description": "Confidence in the trade idea (0-1)"
      },
      "confidencePhrases": {
        "type": "array",
        "items": { "type": "string" },
        "description": "Phrases indicating confidence level"
      },
      "entryParameters": { 
        "$ref": "#/definitions/entryParameters",
        "description": "Entry parameters"
      },
      "exitParameters": { 
        "$ref": "#/definitions/exitParameters",
        "description": "Exit parameters"
      },
      "tradedInstrument": {
        "$ref": "#/definitions/tradedInstrument",
        "description": "Details about the instrument to trade"
      },
      "rationale": {
        "type": "string",
        "description": "Reasoning behind this trade idea"
      },
      "tradeDuration": { 
        "$ref": "#/definitions/tradeDuration",
        "description": "Expected trade duration"
      },
      "setup": {
        "type": "string",
        "description": "The trade setup type"
      },
      "status": {
        "type": "string",
        "enum": ["active", "executed", "invalidated", "expired"],
        "description": "Current status of the idea"
      },
      "confirmationStatus": {
        "type": "string",
        "enum": ["unconfirmed", "confirmed", "rejected", "modified"],
        "description": "User confirmation status for the idea"
      },
      "frequency": {
        "type": "number",
        "description": "Number of times mentioned in analysis",
        "minimum": 0
      },
      "priority": {
        "type": "number",
        "description": "Priority ranking",
        "minimum": 0
      },
      "isFavorite": {
        "type": "boolean",
        "default": false,
        "description": "Whether this is a favorite trade"
      },
      "classifications": { 
        "$ref": "#/definitions/classifications",
        "description": "Trade setup classifications"
      },
      "positionSizing": {
        "type": "object",
        "properties": {
          "recommendation": {
            "type": "string",
            "enum": ["full", "half", "third", "quarter", "small", "speculative"],
            "description": "Size recommendation"
          },
          "reasoning": {
            "type": "string",
            "description": "Reasoning for size recommendation"
          }
        },
        "description": "Position sizing recommendations"
      },
      "relatedIdeas": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "IDs of related trade ideas"
        },
        "description": "Related trade ideas"
      },
      "expiration": {
        "type": "string",
        "format": "date-time",
        "description": "When this idea expires"
      },
      "visualKey": {
        "type": "string",
        "description": "Visual identifier for UI representation (e.g., 🔵 breakout)"
      }
    }
  },
  
  "tradePlan": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "required": ["date", "marketFramework"],
    "properties": {
      "date": {
        "type": "string",
        "format": "date",
        "description": "Trade plan date"
      },
      "marketFramework": {
        "type": "object",
        "required": ["bias", "mode"],
        "properties": {
          "bias": {
            "type": "string",
            "enum": ["bullish", "bearish", "neutral", "neutral-to-bullish", "neutral-to-bearish"],
            "description": "Market directional bias"
          },
          "biasCondition": {
            "type": "string",
            "description": "Conditions for the bias"
          },
          "mode": {
            "type": "string",
            "enum": ["Mode 1", "Mode 2"],
            "description": "Market mode (trending vs. range/trap)",
            "enumDescriptions": {
              "Mode 1": "Trending market with directional momentum",
              "Mode 2": "Range-bound or choppy market with false breakouts"
            }
          },
          "modeConfidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Confidence in mode classification (0-100)"
          },
          "character": {
            "type": "string",
            "description": "Market character description"
          },
          "catalysts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Market catalysts"
          },
          "keyMovers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ticker": { "type": "string" },
                "direction": { "type": "string" },
                "magnitude": { "type": "string" },
                "reason": { "type": "string" }
              }
            },
            "description": "Key market movers"
          }
        },
        "description": "Market framework assessment"
      },
      "confirmationStatus": {
        "type": "string",
        "enum": ["unconfirmed", "confirmed", "rejected", "modified"],
        "description": "User confirmation status for the plan"
      },
      "levelFramework": {
        "type": "object",
        "properties": {
          "indices": {
            "type": "object",
            "patternProperties": {
              "^[a-zA-Z0-9]+$": {
                "type": "object",
                "properties": {
                  "support": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/priceLevel" }
                  },
                  "resistance": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/priceLevel" }
                  }
                }
              }
            },
            "description": "Index price levels"
          },
          "stocks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["ticker"],
              "properties": {
                "ticker": {
                  "type": "string"
                },
                "levels": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "array",
                      "items": { "$ref": "#/definitions/priceLevel" }
                    },
                    "resistance": {
                      "type": "array",
                      "items": { "$ref": "#/definitions/priceLevel" }
                    }
                  }
                },
                "movingAverages": {
                  "type": "object",
                  "patternProperties": {
                    "^ma[0-9]+$": { "$ref": "#/definitions/price" }
                  }
                }
              }
            },
            "description": "Stock-specific levels"
          },
          "zones": {
            "type": "array",
            "items": { "$ref": "#/definitions/priceZone" },
            "description": "Price zones"
          },
          "keyDecisionPoint": { 
            "$ref": "#/definitions/price",
            "description": "Key market decision point"
          }
        },
        "description": "Technical level framework"
      },
      "tradeIdeas": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["ticker", "direction", "conviction", "category"],
          "properties": {
            "ticker": {
              "type": "string",
              "description": "Symbol for the trade idea"
            },
            "direction": {
              "type": "string",
              "enum": ["long", "short"],
              "description": "Trade direction"
            },
            "conviction": {
              "type": "string",
              "enum": ["focus-trade", "high", "medium", "low", "negative"],
              "description": "Conviction level"
            },
            "category": {
              "type": "string",
              "enum": ["primary", "secondary", "watchlist"],
              "description": "Idea category"
            },
            "ideaId": {
              "type": "string",
              "description": "Reference to full trade idea object"
            },
            "entry": {
              "type": "object",
              "properties": {
                "min": { "$ref": "#/definitions/price" },
                "max": { "$ref": "#/definitions/price" },
                "condition": { "type": "string" }
              },
              "description": "Entry parameters summary"
            },
            "targets": {
              "type": "array",
              "items": { "$ref": "#/definitions/price" },
              "description": "Target prices"
            },
            "stop": { 
              "$ref": "#/definitions/price",
              "description": "Stop loss level"
            },
            "setup": {
              "type": "string",
              "description": "Setup type"
            },
            "notes": {
              "type": "string",
              "description": "Additional notes"
            }
          }
        },
        "description": "Trade ideas for this plan"
      },
      "scenarioPlanning": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["type", "trigger"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["long", "short", "neutral"],
              "description": "Scenario bias"
            },
            "conviction": {
              "type": "string",
              "enum": ["high", "medium", "low"],
              "description": "Conviction in this scenario"
            },
            "trigger": {
              "type": "string",
              "description": "What triggers this scenario"
            },
            "targets": {
              "type": "array",
              "items": { "$ref": "#/definitions/price" },
              "description": "Price targets for this scenario"
            },
            "stop": { 
              "$ref": "#/definitions/price",
              "description": "Stop level for this scenario"
            },
            "risk_reward": {
              "type": "number",
              "minimum": 0,
              "description": "Risk/reward ratio"
            },
            "probability": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Probability of this scenario (0-100)"
            },
            "description": {
              "type": "string",
              "description": "Scenario description"
            }
          }
        },
        "description": "Scenario planning"
      },
      "riskManagement": {
        "type": "object",
        "properties": {
          "accountSize": {
            "type": "number",
            "minimum": 0,
            "description": "Account size for risk calculations"
          },
          "maxRiskPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Maximum risk percentage per trade"
          },
          "dailyRiskAmount": {
            "type": "number",
            "minimum": 0,
            "description": "Maximum daily risk amount"
          },
          "positionSizing": {
            "type": "string",
            "description": "Position sizing strategy"
          },
          "stopPlacement": {
            "type": "string",
            "description": "Stop placement guidelines"
          },
          "trailStrategy": {
            "type": "string",
            "description": "Runner trailing strategy"
          }
        },
        "description": "Risk management framework"
      },
      "metadata": {
        "type": "object",
        "properties": {
          "generatedFrom": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Source data for the plan"
          },
          "generationTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the plan was generated"
          },
          "updatedTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the plan was last updated"
          }
        },
        "description": "Plan metadata"
      }
    }
  },
  
  "tradeLog": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "required": ["positionId", "action"],
    "properties": {
      "positionId": {
        "type": "string",
        "description": "ID of the related position"
      },
      "action": {
        "type": "string",
        "enum": ["entry", "exit", "add", "trim", "stop-adjust", "target-adjust", "cancel"],
        "description": "Log action type"
      },
      "executionTimestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Exact time of execution"
      },
      "price": { 
        "$ref": "#/definitions/price",
        "description": "Action price"
      },
      "shares": {
        "type": "number",
        "minimum": 0,
        "description": "Number of shares"
      },
      "contracts": {
        "type": "number",
        "minimum": 0,
        "description": "Number of contracts"
      },
      "notes": {
        "type": "string",
        "description": "Action notes"
      },
      "reasonType": {
        "type": "string",
        "enum": ["technical", "fundamental", "risk-management", "planned", "discretionary", "error"],
        "description": "Reason for the action"
      },
      "reasonDetail": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["profit-target", "stop-loss", "trailing-stop", "signal-reversal", "time-exit", "risk-adjustment", "other"],
            "description": "Detailed reason category"
          },
          "explanation": {
            "type": "string",
            "description": "Detailed explanation"
          }
        },
        "description": "Detailed reason information"
      },
      "marketContext": {
        "type": "object",
        "properties": {
          "spxLevel": { 
            "$ref": "#/definitions/price",
            "description": "SPX level at action time"
          },
          "vixLevel": { 
            "type": "number",
            "description": "VIX level at action time"
          },
          "indicesStatus": {
            "type": "string",
            "description": "Status of major indices"
          }
        },
        "description": "Market context at action time"
      }
    }
  },
  
  "sessionLog": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "required": ["date", "summary"],
    "properties": {
      "date": {
        "type": "string",
        "format": "date",
        "description": "Session date"
      },
      "trades": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "ID of position involved in this session"
        },
        "description": "Positions involved in this session"
      },
      "summary": {
        "type": "object",
        "properties": {
          "netPnL": {
            "type": "number",
            "description": "Net profit/loss amount"
          },
          "netPnLPercent": {
            "type": "number",
            "description": "Net profit/loss percentage"
          },
          "totalTrades": {
            "type": "number",
            "minimum": 0,
            "description": "Total number of trades"
          },
          "winningTrades": {
            "type": "number",
            "minimum": 0,
            "description": "Number of winning trades"
          },
          "losingTrades": {
            "type": "number",
            "minimum": 0,
            "description": "Number of losing trades"
          },
          "winRate": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Win rate percentage"
          }
        },
        "description": "Session performance summary"
      },
      "marketSummary": {
        "type": "object",
        "properties": {
          "spxOpen": { 
            "$ref": "#/definitions/price",
            "description": "SPX open price"
          },
          "spxClose": { 
            "$ref": "#/definitions/price",
            "description": "SPX close price"
          },
          "spxPercent": { 
            "type": "number",
            "description": "SPX percentage change"
          },
          "nasdaqPercent": { 
            "type": "number",
            "description": "NASDAQ percentage change"
          },
          "dowPercent": { 
            "type": "number",
            "description": "DOW percentage change"
          },
          "vixOpen": { 
            "type": "number",
            "description": "VIX open level"
          },
          "vixClose": { 
            "type": "number",
            "description": "VIX close level"
          },
          "marketMode": {
            "type": "string",
            "enum": ["Mode 1", "Mode 2"],
            "description": "Market mode"
          },
          "keyEvents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Key market events"
          }
        },
        "description": "Market summary"
      },
      "planAdherence": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Plan adherence score (0-100)"
          },
          "tradesPlanBased": {
            "type": "number",
            "minimum": 0,
            "description": "Number of trades based on plan"
          },
          "tradesOffPlan": {
            "type": "number",
            "minimum": 0,
            "description": "Number of trades not in plan"
          },
          "missedOpportunities": {
            "type": "number",
            "minimum": 0,
            "description": "Missed opportunities from plan"
          },
          "notes": {
            "type": "string",
            "description": "Adherence notes"
          }
        },
        "description": "Plan adherence metrics"
      },
      "patternRecognition": {
        "type": "object",
        "properties": {
          "timePatterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Time-based patterns"
          },
          "setupPatterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Setup performance patterns"
          },
          "psychologicalTendencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Psychological tendencies"
          },
          "errorRepetitions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Repeated errors"
          }
        },
        "description": "Pattern recognition"
      },
      "lessonsLearned": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "enum": ["entry", "exit", "management", "planning", "psychology", "technical", "fundamental"],
              "description": "Lesson category"
            },
            "lesson": {
              "type": "string",
              "description": "Lesson learned"
            },
            "actionItem": {
              "type": "string",
              "description": "Action item"
            }
          }
        },
        "description": "Lessons learned"
      }
    }
  },
  
  "conversationContext": {
    "type": "object",
    "allOf": [{ "$ref": "#/definitions/baseObject" }],
    "properties": {
      "activeSymbols": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Currently active symbols in conversation"
      },
      "symbolsMentionedToday": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "All symbols mentioned during session"
      },
      "recentCommands": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "command": {
              "type": "string",
              "description": "Command name"
            },
            "params": {
              "type": "object",
              "description": "Command parameters"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Command timestamp"
            }
          }
        },
        "description": "Recent commands executed"
      },
      "lastPromptUsed": {
        "type": "string",
        "description": "Last prompt file used"
      },
      "pendingConfirmations": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "command": {
              "type": "string",
              "description": "Command pending confirmation"
            },
            "params": {
              "type": "object",
              "description": "Command parameters"
            },
            "confirmationMessage": {
              "type": "string",
              "description": "Confirmation message"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When confirmation was requested"
            }
          }
        },
        "description": "Commands pending user confirmation"
      },
      "lastTradeGenerated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of last generated trade"
          },
          "symbol": {
            "type": "string",
            "description": "Symbol of last generated trade"
          },
          "direction": {
            "type": "string",
            "description": "Direction of last generated trade"
          }
        },
        "description": "Last trade generated by system"
      },
      "currentPositions": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["symbol", "direction"],
          "properties": {
            "symbol": {
              "type": "string",
              "description": "Position symbol"
            },
            "direction": {
              "type": "string",
              "enum": ["long", "short"],
              "description": "Position direction"
            },
            "positionId": {
              "type": "string",
              "description": "Position ID"
            },
            "entryPrice": { 
              "$ref": "#/definitions/price",
              "description": "Entry price"
            },
            "stopPrice": { 
              "$ref": "#/definitions/price",
              "description": "Stop price"
            },
            "targetPrice": { 
              "$ref": "#/definitions/price",
              "description": "Target price"
            }
          }
        },
        "description": "Currently open positions"
      },
      "activeWatchlist": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["symbol"],
          "properties": {
            "symbol": {
              "type": "string",
              "description": "Watchlist symbol"
            },
            "ideaId": {
              "type": "string",
              "description": "Related idea ID"
            },
            "direction": {
              "type": "string",
              "enum": ["long", "short"],
              "description": "Anticipated direction"
            },
            "entryZone": { 
              "$ref": "#/definitions/priceZone",
              "description": "Entry zone"
            }
          }
        },
        "description": "Active watchlist items"
      },
      "marketContext": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": ["Mode 1", "Mode 2"],
            "description": "Current market mode"
          },
          "bias": {
            "type": "string",
            "enum": ["bullish", "bearish", "neutral", "neutral-to-bullish", "neutral-to-bearish"],
            "description": "Current market bias"
          },
          "spxLevel": { 
            "$ref": "#/definitions/price",
            "description": "Current SPX level"
          },
          "recentCatalyst": {
            "type": "string",
            "description": "Most recent market catalyst"
          }
        },
        "description": "Current market context"
      },
      "userPreferences": {
        "type": "object",
        "properties": {
          "defaultRiskPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Default risk percentage"
          },
          "defaultDuration": { 
            "$ref": "#/definitions/tradeDuration",
            "description": "Default trade duration"
          },
          "preferredSetups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Preferred setup types"
          }
        },
        "description": "User preferences"
      },
      "sessionState": {
        "type": "object",
        "properties": {
          "phase": {
            "type": "string",
            "enum": ["premarket", "open", "lunch", "close", "afterhours"],
            "description": "Current session phase"
          },
          "activePlanId": {
            "type": "string",
            "description": "Active trade plan ID"
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "description": "Session start time"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "description": "Last user activity timestamp"
          }
        },
        "description": "Current session state"
      }
    }
  },
  
  "schemaMetadata": {
    "authoringVersion": "0.5.2",
    "runtimeCompatible": true,
    "generatedDate": "2025-05-20T00:00:00Z"
  }
}